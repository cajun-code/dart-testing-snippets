{
    "Flutter Gherkin app":{
        "prefix":"!FLG_app",
        "description":"Create a version of the app that has the driver enabled",
        "body":[
            "import 'package:flutter/widgets.dart';",
            "import 'package:flutter_driver/driver_extension.dart';",
            "$0",
            "void main() {",
            "    // This line enables the extension",
            "    enableFlutterDriverExtension();",
            "    // Call the `main()` function of your app or call `runApp` with any widget you",
            "    // are interested in testing.",
            "    runApp(${1:NameOfApp}());",
            "}"
        ]
    },
    "Flutter Gherkin main":{
        "prefix":"!FLG_main",
        "description":"Create the gherkin config to run the tests",
        "body":[
            "import 'dart:async';",
            "import 'package:flutter_gherkin/flutter_gherkin.dart';",
            "import 'package:gherkin/gherkin.dart';",
            "import 'package:glob/glob.dart';",
            "$0",
            "Future<void> main() {",
            "final config = FlutterTestConfiguration()",
            "    ..features = [Glob(r\"${1:test_folder}/features/**.feature\")]",
            "    ..reporters = [",
            "    ProgressReporter(),",
            "    TestRunSummaryReporter(),",
            "    JsonReporter(path: './report.json')",
            "    ] // you can include the \"StdoutReporter()\" without the message level parameter for verbose log information",
            "    ..hooks = []",
            "    ..stepDefinitions = []",
            "    ..customStepParameterDefinitions = []",
            "    ..restartAppBetweenScenarios = true",
            "    ..targetAppPath = \"${1:test_folder}/app.dart\"",
            "    // ..tagExpression = \"@smoke\" // uncomment to see an example of running scenarios based on tag expressions",
            "    ..exitAfterTestRun = true; // set to false if debugging to exit cleanly",
            "return GherkinRunner().execute(config);",
            "}"
        ]
    }

}